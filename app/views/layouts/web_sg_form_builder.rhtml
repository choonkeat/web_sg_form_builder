<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/
xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <%= stylesheet_link_tag 'coderay' %>
  <style type="text/css">
  body {
      font-family: "Lucida Grande", Tahoma, Arial, Verdana, sans-serif;
      font-size: 76%;      /* allows safe use of em unit - blog.fawny.org */
  }
  
  p, div, span, input, form, textarea, select, a {
      font-size: 1em;
  }
  
  span, input, form, textarea, select, a {
      font-size: 1em;
  }
  
  form legend {
      font-size: 1.2em;
      font-weight: bold;
  }
  
  form dl input, form dl textarea, form dl select {
      padding: 3px 3px 3px 3px;
      margin-top: 3px;
  }
  
  form dl dt {
      margin-top: 1em;     /* white-space above field label */
  }
  
  form dl dd {
      margin-left: 0px;    /* by default dd is indented */
  }
  
  form dl dt label {
      font-weight: bold;
      margin-right: 1.5em;
  }
  
  form dl dt span, .hint, a.hint, .hint a {        /* style for hints */
      vertical-align: text-top;
      color: #A0A0A0;
      font-size: 0.85em;
  }
  </style>
</head>
<body>
  <h1>WebSgFormBuilder</h1>
  <p>
  WebSgFormBuilder introduces 2 new methods (<code>fieldset</code> and <code>dd</code>) to your form, and 2 new options (<code>:hint</code> and <code>:label</code>) for existing form helper methods (e.g. <code>text_field</code>) to help build more sematically correct forms that takes on this structure
  <pre>
&lt;form ... &gt;
  &lt;fieldset&gt;
    &lt;legend&gt;Some Context&lt;/legend&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="someid"&gt;Name&lt;/label&gt;&lt;/dt&gt;
      &lt;dd&gt;&lt;input id="someid" ... /&gt;&lt;/dd&gt;
    &lt;dl&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;
  </pre>
  </p>
  <h3>f.fieldset</h3>
<table><tr><td style='width: 12em;'>
  <pre>
  &lt;% f.fieldset 'hello' do %&gt;
    world
  &lt;% end %&gt;
  </pre>
</td><td>
  translates to: 
</td><td>
  <pre>
  &lt;fieldset&gt;&lt;legend&gt;hello&lt;/legend&gt;&lt;dl&gt;
    world
  &lt;/dl&gt;&lt;/fieldset&gt;
  </pre>
</td></tr></table>
  <h3>f.dd</h3>
  <p>
  To group several checkboxes or radio buttons, you can use the <code>dd</code> method:
  </p>
<table><tr><td style='width: 12em;'>
  <pre>
  &lt;% f.dd 'hello' do %&gt;
    world
  &lt;% end %&gt;
  </pre>
</td><td>
  translates to:
</td><td>
  <pre>
  &lt;dt&gt;&lt;label&gt;hello&lt;/label&gt;&lt;span&gt;&lt;/span&gt;&lt;/dt&gt;&lt;dd&gt;
    world
  &lt;/dd&gt;
  </pre>
</td></tr></table>
  <p>
  They will appear more useful when applied with <code>text_field</code>, <code>check_box</code>, etc Rails helpers. See the example below to learn what it wraps for you. To use this builder in your Rails app, there is 3 ways to go about it
  </p>
  <p>
  Option#1 Introducing it independently to new forms by adding this <code>:builder</code> option:
    <pre>
    form_for :thing, <span style='background-color: yellow;'>:builder => ::WebSgFormBuilder</span> do |f|
    </pre> 
  </p>
  <p>
  Option#2 by editing your controller's helper file, e.g. app/helpers/users_helper.rb
    <pre>
    module UsersHelper
      <span style='background-color: yellow;'>include WebSgFormHelper</span>
    end
    </pre> 
  </p>
  <p>
  Option#3 Make this default builder for <b>all</b> forms by editing app/helpers/application_helper.rb
    <pre>
    module ApplicationHelper
      <span style='background-color: yellow;'>include WebSgFormHelper</span>
    end
    </pre>
  </p>
  <h2><code>app/views/web_sg_form_builder/index.rhtml</code></h2>
  <h2>Source RHTML</h2>
  <% source = open(RAILS_ROOT + "/app/views/web_sg_form_builder/index.rhtml") {|f| f.read } rescue nil %>
  <pre class="CodeRay" style="overflow-x: auto">
<%= ::CodeRay.scan(source, :rhtml).html rescue "<em>(install coderay to see this in color)</em>\n" + h(source) %></pre>
  <p />
  <h2>Generated HTML source</h2>
  <pre class="CodeRay" style="overflow-x: auto">
<%= ::CodeRay.scan(yield, :html).html rescue "<em>(install coderay to see this in color)</em>\n" + h(yield) %></pre>
  <h2>Generated HTML rendered</h2>
  <%= yield %>
</body>
</html>
